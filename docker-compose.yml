version: '3'

services:
  gateway:
    build: ./gateway
    ports:
      - "1887:1887"
    volumes:
      - ./gateway:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      ROUTING_SERVICE: routing-service
    depends_on:
      - "rabbitmq"
  router:
    build: ./router
    volumes:
      - ./router:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      ROUTING_SERVICE: routing-service
      OAUTH_URI_SERVICE: oauth-service
      SUBSCRIPTION_SERVICE: subscription-service
      MESSAGE_SERVICE: message-service
      DEVICE_SERVICE: device-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  oauth:
    build: ./oauth
    ports:
      - "55000:5000"
    volumes:
      - ./oauth:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      OAUTH_URI_SERVICE: oauth-service
      ROUTING_SERVICE: routing-service
      REDIRECT_URI: "https://127.0.0.1:55000/"
    depends_on:
      - "rabbitmq"
  subscriptions:
    build: ./subscriptions
    volumes:
      - ./subscriptions:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      SUBSCRIPTION_SERVICE: subscription-service
      MESSAGE_SERVICE: message-service
      ACCESS_CONTROL_SERVICE: access-control-service
      LOGGER_SERVICE: logger-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  messages:
    build: ./messages
    volumes:
      - ./messages:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      MESSAGE_SERVICE: message-service
      ROUTING_SERVICE: routing-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  access_control:
    build: ./access_control
    volumes:
      - ./access_control:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      ACCESS_CONTROL_SERVICE: access-control-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  devices:
    build: ./devices
    volumes:
      - ./devices:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      DEVICE_SERVICE: device-service
      ACCESS_CONTROL_SERVICE: access-control-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  logger:
    build: ./logger
    volumes:
      - ./logger:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      MY_SERVICE: logger-service
      ACCESS_CONTROL_SERVICE: access-control-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"
  rabbitmq:
    image: rabbitmq:3.8-alpine
    ports:
      - "5672:5672"
  conn_db:
    image: postgres:10-alpine
    ports:
      - "5432:5432"
    volumes:
      - conn-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: mydb
  manager:
    build: ./manager
    ports:
      - "5000:5000"
    volumes:
      - ./manager:/usr/src/app
    environment:
      AMQP_URL: rabbitmq
      MANAGER_SERVICE: manager-service
      OAUTH_URI_SERVICE: oauth-service
      DB_NAME: mydb
      DB_USER: root
      DB_PASS: root
      DB_HOST: conn_db
    depends_on:
      - "rabbitmq"
      - "conn_db"

volumes:
  conn-db-data:

